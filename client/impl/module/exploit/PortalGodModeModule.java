package net.shoreline.client.impl.module.exploit;

import net.minecraft.class_2596;
import net.minecraft.class_2708;
import net.minecraft.class_434;
import net.shoreline.client.api.config.Config;
import net.shoreline.client.api.config.setting.BooleanConfig;
import net.shoreline.client.api.event.EventStage;
import net.shoreline.client.api.event.listener.EventListener;
import net.shoreline.client.api.module.ModuleCategory;
import net.shoreline.client.api.module.ToggleModule;
import net.shoreline.client.impl.event.TickEvent;
import net.shoreline.client.impl.event.network.PacketEvent;
import net.shoreline.client.util.math.timer.CacheTimer;
import net.shoreline.client.util.math.timer.Timer;

public class PortalGodModeModule extends ToggleModule {
   Config<Boolean> positionAdjustConfig = new BooleanConfig("PositionAdjust", "Adjusts position to match server portal position", true);
   private double teleportX;
   private double teleportY;
   private double teleportZ;
   private boolean cancelTeleport;
   private final Timer portalTimer = new CacheTimer();

   public PortalGodModeModule() {
      super("PortalGodMode", "Makes the player invincible while in portals", ModuleCategory.EXPLOITS);
   }

   public void onEnable() {
      this.teleportX = 0.0D;
      this.teleportY = 0.0D;
      this.teleportZ = 0.0D;
   }

   @EventListener
   public void onPacketInbound(PacketEvent.Inbound event) {
      if (mc.field_1724 != null) {
         if (mc.field_1755 instanceof class_434) {
            this.cancelTeleport = true;
            mc.field_1755 = null;
            this.portalTimer.reset();
         }

         class_2596 var3 = event.getPacket();
         if (var3 instanceof class_2708) {
            class_2708 packet = (class_2708)var3;
            if ((Boolean)this.positionAdjustConfig.getValue() && !mc.field_1724.method_3144()) {
               this.teleportX = packet.method_11734();
               this.teleportY = packet.method_11735();
               this.teleportZ = packet.method_11738();
               mc.field_1724.method_5814(packet.method_11734(), packet.method_11735(), packet.method_11738());
            }

            event.cancel();
         }

      }
   }

   @EventListener
   public void onTick(TickEvent event) {
      if (event.getStage() == EventStage.PRE && this.teleportX != 0.0D && this.teleportY != 0.0D && this.teleportZ != 0.0D && this.cancelTeleport) {
         mc.field_1724.method_5814(this.teleportX, this.teleportY, this.teleportZ);
         if (this.portalTimer.passed(2500)) {
            this.cancelTeleport = false;
         }
      }

   }
}

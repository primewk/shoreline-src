package net.shoreline.client.impl.module.exploit;

import net.minecraft.class_1268;
import net.minecraft.class_1799;
import net.minecraft.class_1835;
import net.minecraft.class_1890;
import net.minecraft.class_2338;
import net.minecraft.class_2350;
import net.minecraft.class_2846;
import net.minecraft.class_2886;
import net.minecraft.class_2846.class_2847;
import net.shoreline.client.api.config.Config;
import net.shoreline.client.api.config.setting.EnumConfig;
import net.shoreline.client.api.event.listener.EventListener;
import net.shoreline.client.api.module.ModuleCategory;
import net.shoreline.client.api.module.ToggleModule;
import net.shoreline.client.impl.event.item.TridentWaterEvent;
import net.shoreline.client.impl.event.network.PlayerTickEvent;
import net.shoreline.client.init.Managers;
import net.shoreline.client.util.string.EnumFormatter;

public final class DisablerModule extends ToggleModule {
   Config<DisablerModule.Mode> modeConfig;

   public DisablerModule() {
      super("Disabler", "Disables anticheat checks", ModuleCategory.EXPLOITS);
      this.modeConfig = new EnumConfig("Mode", "The mode for disabling anticheat checks", DisablerModule.Mode.GRIM_TRIDENT, DisablerModule.Mode.values());
   }

   public String getModuleData() {
      return this.modeConfig.getValue() == DisablerModule.Mode.GRIM_TRIDENT ? "Grim" : EnumFormatter.formatEnum((Enum)this.modeConfig.getValue());
   }

   @EventListener
   public void onPlayerTick(PlayerTickEvent event) {
      if (this.modeConfig.getValue() == DisablerModule.Mode.GRIM_TRIDENT) {
         if (mc.field_1724.method_6115()) {
            return;
         }

         int tridentSlot = -1;

         for(int i = 0; i < 9; ++i) {
            class_1799 stack = mc.field_1724.method_31548().method_5438(i);
            if (!stack.method_7960() && stack.method_7909() instanceof class_1835 && class_1890.method_8202(stack) > 0) {
               tridentSlot = i;
               break;
            }
         }

         if (tridentSlot == -1) {
            return;
         }

         Managers.INVENTORY.setSlot(tridentSlot);
         Managers.NETWORK.sendSequencedPacket((id) -> {
            return new class_2886(class_1268.field_5808, id);
         });
         Managers.NETWORK.sendPacket(new class_2846(class_2847.field_12974, class_2338.field_10980, class_2350.field_11033));
         Managers.INVENTORY.syncToClient();
      }

   }

   @EventListener
   public void onTridentWaterCheck(TridentWaterEvent event) {
      if (((DisablerModule.Mode)this.modeConfig.getValue()).equals(DisablerModule.Mode.GRIM_TRIDENT)) {
         event.cancel();
      }

   }

   private static enum Mode {
      GRIM_TRIDENT;

      // $FF: synthetic method
      private static DisablerModule.Mode[] $values() {
         return new DisablerModule.Mode[]{GRIM_TRIDENT};
      }
   }
}
